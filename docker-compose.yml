services:
  coordinator:
    build:
      context: "."
      dockerfile: "coordinator.dockerfile"
    networks:
      - protected
      - private
    ports:
      - "80:80"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  gateway:
    build:
      context: "."
      dockerfile: "gateway.dockerfile"
    ports:
      - "81:81"
    networks:
      - public
      - protected
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    image: "docker.io/postgres:16-alpine"
    environment:
      POSTGRES_USER: administrator
      POSTGRES_DB: dm
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5555:5432"
    volumes:
      - "postgres:/var/lib/postgresql/data"
    networks:
      - private
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -p 5432 -U administrator -d dm"]
      interval: 5s
      timeout: 5s
      retries: 5
  rabbitmq:
    image: "rabbitmq:3-management"
    networks:
      - private
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

volumes:
  postgres:

networks:
  public:
  protected:
  private:
  